BACKUP ~SRmap_modding_tool/backup~
AUTHOR ~Weigo~
SUPPORT ~Weigo - Send PM to Weigo at SHSForums.net or Weigo at Gibberlings3.net or Weigo at baldurs-gate.de~

VERSION ~1.0~
//MODDER


ALWAYS

	//OUTER_SET areaname = ~AR1200~
	OUTER_SPRINT originalfolder_classic ~%MOD_FOLDER%/area/original/classic~ //original unmodded searchmap folder from classic bg
	OUTER_SPRINT originalfolder_ee ~%MOD_FOLDER%/area/original/ee~			 //original unmodded searchmap folder from ee bg
	OUTER_SPRINT filename_classic ~AR1200SR~								 //original unmodded searchmap filename from classic bg
	OUTER_SPRINT filename_ee ~BG1200SR~										 //original unmodded searchmap filename from ee bg
	OUTER_SPRINT newfolder ~%MOD_FOLDER%/area/new~							 //modded searchmap folder
	OUTER_SPRINT filename_new ~AR8100SR~									 //modded searchmap filename
	OUTER_SPRINT filename_changes_classic ~%filename_new%_changes_classic~		 //filenames for the 2da files used by the mod
	OUTER_SPRINT filename_changes_ee ~%filename_new%_changes_ee~					 //filenames for the 2da files used by the mod
END


BEGIN ~Search Map Modding Tool~
NO_LOG_RECORD



<<<<<<<< .../bit_array.2da
>>>>>>>>	

COPY + ~%newfolder%/%filename_new%.bmp~ ~%newfolder%/%filename_new%.bmp~
	READ_LONG 0xa pixeloffset_new
	READ_LONG 0x12 width_new
	READ_LONG 0x16 height_new
	SET width = width_new
	PATCH_IF (width MODULO 2 = 1) BEGIN
		width = width + 1
	END
	PATCH_IF ((width / 2 ) MODULO 4 > 0) BEGIN
		SET attach = 4 - ((width / 2 ) MODULO 4)
	END ELSE BEGIN
		SET attach = 0
	END
	SET rowlenght = width / 2 + attach
	SET rowlenght_new = rowlenght
	SET height = height_new
	SET pixeloffset = pixeloffset_new
	SET pixelnumber = rowlenght * height
	PATCH_PRINT ~Modulo to attach: %attach% - rowlenght: %rowlenght%~
	SPRINT newpixel_array ~~
	FOR (cnt=0; cnt<pixelnumber ; cnt=cnt+1) BEGIN
		SET offset = pixeloffset + cnt
		READ_BYTE offset ~newbit~ 
		SPRINT newpixel_array ~%newpixel_array%%offset% %newbit%%LNL%~
	END
	COPY + ~.../bit_array.2da~ ~%newfolder%/newpixel_array.2da~
	APPEND_OUTER + ~%newfolder%/newpixel_array.2da~ ~%newpixel_array%~
	COPY + ~%newfolder%/newpixel_array.2da~ ~%newfolder%/newpixel_array.2da~
		READ_2DA_ENTRIES_NOW ~newpixelarray~ 2
		

COPY + ~%originalfolder_classic%/%filename_classic%.bmp~ ~%originalfolder_classic%/%filename_classic%.bmp~
	READ_LONG 0xa pixeloffset_orig
	READ_LONG 0x12 width_orig
	READ_LONG 0x16 height_orig
	SET width = width_orig
	PATCH_IF (width MODULO 2 = 1) BEGIN
		width = width + 1
	END
	PATCH_IF ((width / 2 ) MODULO 4 > 0) BEGIN
		SET attach = 4 - ((width / 2 ) MODULO 4)
	END ELSE BEGIN
		SET attach = 0
	END
	SET rowlenght = width / 2 + attach
	SET rowlenght_classic = rowlenght
	SET height = height_orig
	SET pixeloffset = pixeloffset_orig
	SET pixelnumber = rowlenght * height
	PATCH_PRINT ~Modulo to attach: %attach% - rowlenght: %rowlenght%~
	SPRINT oldpixel_array_classic ~~
	FOR (cnt=0; cnt<pixelnumber ; cnt=cnt+1) BEGIN
		SET offset = pixeloffset + cnt
		READ_BYTE offset ~oldbit~ 
		SPRINT oldpixel_array_classic ~%oldpixel_array_classic%%offset% %oldbit%%LNL%~
	END
	COPY + ~.../bit_array.2da~ ~%originalfolder_classic%/oldpixel_array_classic.2da~
	APPEND_OUTER + ~%originalfolder_classic%/oldpixel_array_classic.2da~ ~%oldpixel_array_classic%~
	COPY + ~%originalfolder_classic%/oldpixel_array_classic.2da~ ~%originalfolder_classic%/oldpixel_array_classic.2da~
		READ_2DA_ENTRIES_NOW ~oldpixelarray_classic~ 2

COPY + ~%originalfolder_ee%/%filename_ee%.bmp~ ~%originalfolder_ee%/%filename_ee%.bmp~
	READ_LONG 0xa pixeloffset_orig
	READ_LONG 0x12 width_orig
	READ_LONG 0x16 height_orig
	SET width = width_orig
	PATCH_IF (width MODULO 2 = 1) BEGIN
		width = width + 1
	END
	PATCH_IF ((width / 2 ) MODULO 4 > 0) BEGIN
		SET attach = 4 - ((width / 2 ) MODULO 4)
	END ELSE BEGIN
		SET attach = 0
	END
	SET rowlenght = width / 2 + attach
	SET rowlenght_ee = rowlenght
	SET height = height_orig
	SET pixeloffset = pixeloffset_orig
	SET pixelnumber = rowlenght * height
	PATCH_PRINT ~Modulo to attach: %attach% - rowlenght: %rowlenght%~
	SPRINT oldpixel_array_ee ~~
	FOR (cnt=0; cnt<pixelnumber ; cnt=cnt+1) BEGIN
		SET offset = pixeloffset + cnt
		READ_BYTE offset ~oldbit~ 
		SPRINT oldpixel_array_ee ~%oldpixel_array_ee%%offset% %oldbit%%LNL%~
	END
	COPY + ~.../bit_array.2da~ ~%originalfolder_ee%/oldpixel_array_ee.2da~
	APPEND_OUTER + ~%originalfolder_ee%/oldpixel_array_ee.2da~ ~%oldpixel_array_ee%~
	COPY + ~%originalfolder_ee%/oldpixel_array_ee.2da~ ~%originalfolder_ee%/oldpixel_array_ee.2da~
		READ_2DA_ENTRIES_NOW ~oldpixelarray_ee~ 2

ACTION_IF (rowlenght_new != rowlenght_classic) OR (rowlenght_new != rowlenght_ee) BEGIN
		FAIL ~Wrong bmp files. Please check the right Area files.~
	END
		
COPY + ~.../bit_array.2da~ ~%MOD_FOLDER%/%filename_changes_classic%.2da~
	SPRINT changes_classic ~~
	FOR (cnt=1; cnt<pixelnumber; cnt=cnt+1) BEGIN
	READ_2DA_ENTRY_FORMER ~oldpixelarray_classic~ cnt 0 ~offset~
	READ_2DA_ENTRY_FORMER ~oldpixelarray_classic~ cnt 1 ~oldpixel~
	READ_2DA_ENTRY_FORMER ~newpixelarray~ cnt 1 ~newpixel~
	PATCH_IF (~%oldpixel%~ STRING_EQUAL ~%newpixel%~)=0 BEGIN
		SET left_oldpixel =  oldpixel / 16
		SET right_oldpixel =  oldpixel MODULO 16
		SET left_newpixel = newpixel / 16
		SET right_newpixel = newpixel MODULO 16
		PATCH_IF (~%left_oldpixel%~ STRING_EQUAL ~%left_newpixel%~)=1 BEGIN			//only the right pixel changes
			//PATCH_PRINT ~%offset%: oldpixel %oldpixel% - newpixel %newpixel%~
			SPRINT changes_classic ~%changes_classic%%offset% %oldpixel% %newpixel% r%LNL%~
			SET count = 1
		END ELSE BEGIN
			PATCH_IF (~%right_oldpixel%~ STRING_EQUAL ~%right_newpixel%~)=1 BEGIN	//only the left pixel changes
				//PATCH_PRINT ~%offset%: oldpixel %oldpixel% - newpixel %newpixel%~
				SPRINT changes_classic ~%changes_classic%%offset% %oldpixel% %newpixel% l%LNL%~
				SET count = 1
			END ELSE BEGIN															//both pixel changes
				//PATCH_PRINT ~%offset%: oldpixel %oldpixel% - newpixel %newpixel%~
				SPRINT changes_classic ~%changes_classic%%offset% %oldpixel% %newpixel% b%LNL%~
				SET count = 1
			END
		END
	END
END
APPEND_OUTER + ~%MOD_FOLDER%/%filename_changes_classic%.2da~ ~%changes_classic%~
ACTION_IF (count > 0) BEGIN
COPY + ~%MOD_FOLDER%/%filename_changes_classic%.2da~ ~%MOD_FOLDER%/%filename_changes_classic%.2da~
	REMOVE_2DA_ROW 0 0
END ELSE BEGIN
	PRINT ~The classic and new searmap file is the same~
	MOVE + ~%MOD_FOLDER%/%filename_changes_classic%.2da~ ~%MOD_FOLDER%/%filename_new%_no_changes_classic.2da~
END

COPY + ~.../bit_array.2da~ ~%MOD_FOLDER%/%filename_changes_ee%.2da~
	SPRINT changes_ee ~~
	SET count = 0
	FOR (cnt=1; cnt<pixelnumber; cnt=cnt+1) BEGIN
	READ_2DA_ENTRY_FORMER ~oldpixelarray_ee~ cnt 0 ~offset~
	READ_2DA_ENTRY_FORMER ~oldpixelarray_ee~ cnt 1 ~oldpixel~
	READ_2DA_ENTRY_FORMER ~newpixelarray~ cnt 1 ~newpixel~
	PATCH_IF (~%oldpixel%~ STRING_EQUAL ~%newpixel%~)=0 BEGIN
		SET left_oldpixel =  oldpixel / 16
		SET right_oldpixel =  oldpixel MODULO 16
		SET left_newpixel = newpixel / 16
		SET right_newpixel = newpixel MODULO 16
		PATCH_IF (~%left_oldpixel%~ STRING_EQUAL ~%left_newpixel%~)=1 BEGIN			//only the right pixel changes
			//PATCH_PRINT ~%offset%: oldpixel %oldpixel% - newpixel %newpixel%~
			SPRINT changes_ee ~%changes_ee%%offset% %oldpixel% %newpixel% r%LNL%~
			SET count = 1
		END ELSE BEGIN
			PATCH_IF (~%right_oldpixel%~ STRING_EQUAL ~%right_newpixel%~)=1 BEGIN	//only the left pixel changes
				//PATCH_PRINT ~%offset%: oldpixel %oldpixel% - newpixel %newpixel%~	
				SPRINT changes_ee ~%changes_ee%%offset% %oldpixel% %newpixel% l%LNL%~
				SET count = 1
			END ELSE BEGIN															//both pixel changes
				//PATCH_PRINT ~%offset%: oldpixel %oldpixel% - newpixel %newpixel%~	
				SPRINT changes_ee ~%changes_ee%%offset% %oldpixel% %newpixel% b%LNL%~
				SET count = 1
			END
		END
	END
END
APPEND_OUTER + ~%MOD_FOLDER%/%filename_changes_ee%.2da~ ~%changes_ee%~
ACTION_IF (count > 0) BEGIN
	COPY + ~%MOD_FOLDER%/%filename_changes_ee%.2da~ ~%MOD_FOLDER%/%filename_changes_ee%.2da~
		REMOVE_2DA_ROW 0 0
END ELSE BEGIN
	PRINT ~The ee and new searmap file is the same~
	MOVE + ~%MOD_FOLDER%/%filename_changes_ee%.2da~ ~%MOD_FOLDER%/%filename_new%_no_changes_ee.2da~
END

COPY + ~%MOD_FOLDER%/%filename_changes_ee%.2da~ ~%MOD_FOLDER%/%filename_changes_ee%.2da~
	READ_2DA_ENTRIES_NOW ~ee_array~ 4
	COUNT_2DA_ROWS 4 ~pixelnumber_ee~

COPY + ~%MOD_FOLDER%/%filename_changes_classic%.2da~ ~%MOD_FOLDER%/%filename_changes_classic%.2da~
	SET same_file=0
	READ_2DA_ENTRIES_NOW ~classic_array~ 4
	COUNT_2DA_ROWS 4 ~pixelnumber_classic~
	PATCH_IF (pixelnumber_classic = pixelnumber_ee) BEGIN
		FOR (cnt=0; cnt < pixelnumber_classic ; cnt = cnt + 1) BEGIN
			READ_2DA_ENTRY_FORMER ~ee_array~ cnt 0 ~offset_ee~
			READ_2DA_ENTRY_FORMER ~ee_array~ cnt 1 ~oldpixel_ee~
			READ_2DA_ENTRY_FORMER ~ee_array~ cnt 2 ~newpixel_ee~
			READ_2DA_ENTRY_FORMER ~ee_array~ cnt 3 ~byte_ee~
			READ_2DA_ENTRY_FORMER ~classic_array~ cnt 0 ~offset_classic~
			READ_2DA_ENTRY_FORMER ~classic_array~ cnt 1 ~oldpixel_classic~
			READ_2DA_ENTRY_FORMER ~classic_array~ cnt 2 ~newpixel_classic~
			READ_2DA_ENTRY_FORMER ~classic_array~ cnt 3 ~byte_classic~
		END
		PATCH_IF ((~%offset_ee%~ STRING_EQUAL ~%offset_classic%~)=1 AND (~%oldpixel_ee%~ STRING_EQUAL ~%oldpixel_classic%~)=1 AND 
					(~%newpixel_ee%~ STRING_EQUAL ~%newpixel_classic%~)=1 AND (~%byte_ee%~ STRING_EQUAL ~%byte_classic%~)=1) BEGIN
			PATCH_PRINT ~classic and ee Version have the same searchmap~
			SET same_file=1
		END
	END
	
ACTION_IF (same_file=1) BEGIN
	MOVE + ~%MOD_FOLDER%/%filename_changes_ee%.2da~ ~%MOD_FOLDER%/%filename_new%_changes.2da~
	DELETE + ~%MOD_FOLDER%/%filename_changes_classic%.2da~
END

DELETE + ~%newfolder%/newpixel_array.2da~
DELETE + ~%originalfolder_ee%/oldpixel_array_classic.2da~
DELETE + ~%originalfolder_classic%/oldpixel_array_classic.2da~